{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "22b80d85",
   "metadata": {},
   "source": [
    "# 2.1.3 Creating Pandas Series - Practical Activity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "76e13d5a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "123               Law Enforcement\n",
      "224      Fire and Rescue Services\n",
      "101    Emergency Medical Services\n",
      "999          Emergency Management\n",
      "900                  Public Works\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "#DATA\n",
    "#Emergency numbers: Law Enforcement (123), \n",
    "#Fire and Rescue Services (224), \n",
    "#Emergency Medical Services (101), \n",
    "#Emergency Management (999), \n",
    "#and Public Works (900).\n",
    "\n",
    "import pandas as pd\n",
    "dict_1 = {123 : 'Law Enforcement', \n",
    "          224: 'Fire and Rescue Services', \n",
    "          101: 'Emergency Medical Services', \n",
    "          999: 'Emergency Management', \n",
    "          900: 'Public Works'}\n",
    "emergency_no_list = pd.Series(dict_1)\n",
    "print(emergency_no_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a59b87c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1      Prevention\n",
      "2      Mitigation\n",
      "3    Preparedness\n",
      "4        Response\n",
      "5        Recovery\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "#Emergency protocols: Prevention, mitigation, preparedness, response, and recovery.\n",
    "\n",
    "list_1 = ['Prevention','Mitigation',\n",
    "          'Preparedness','Response','Recovery']\n",
    "index = ['1','2','3','4','5']\n",
    "\n",
    "emergency_protocols = pd.Series(list_1,index)\n",
    "print(emergency_protocols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3c24b114",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0                Check carotid pulse (neck)\n",
      "1                    Check breathing (nose)\n",
      "2    Check obstructions (nose, ears, mouth)\n",
      "3                 Check pupils (responsive)\n",
      "4                       Check consciousness\n",
      "5                     Check contact details\n",
      "6                           Check allergies\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "#Emergency checklist: Check carotid pulse (neck), breathing (nose), obstructions (nose, ears, mouth), pupils (responsive), \n",
    "#consciousness, contact details, and allergies.\n",
    "\n",
    "list_2 = ['Check carotid pulse (neck)', 'Check breathing (nose)', \n",
    "          'Check obstructions (nose, ears, mouth)', 'Check pupils (responsive)', \n",
    "          'Check consciousness', 'Check contact details', ' Check allergies']\n",
    "\n",
    "emergency_checklist = pd.Series(list_2)\n",
    "print(emergency_checklist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a056e71f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ab00c92",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
